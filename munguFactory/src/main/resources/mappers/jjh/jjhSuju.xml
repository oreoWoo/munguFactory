<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oracle.munguFactory.mappers.jjh.jjhSuju">
	
	<select id="sujuTotCnt" parameterType="OrdersPaging" resultType="int">
		select Count(*) 
		from orders o inner Join accounts a on o.account_no = a.account_no
		<choose>
			<when test="searchName!=null and !searchName.equals('') and startDate!=null and !startDate.equals('') and endDate!=null and !endDate.equals('')">
				where a.account_name like concat(#{searchName} ,'%') 
				and  Suju_date between #{startDate} and #{endDate}
			</when>
			<when test="searchName!=null and !searchName.equals('') and startDate!=null and !startDate.equals('')">
				where a.account_name like concat(#{searchName} ,'%')
				and	  Suju_date &gt; #{startDate}
			</when>
			<when test="searchName!=null and !searchName.equals('') and endDate!=null and !endDate.equals('')">
				where a.account_name like concat(#{searchName} ,'%')
				and	  Suju_date &lt; #{endDate}
			</when>
			<when test="startDate!=null and !startDate.equals('') and endDate!=null and !endDate.equals('')">
				where Suju_date between #{startDate} and #{endDate}
			</when>
			<when test="searchName!=null and !searchName.equals('')">
				where a.account_name like concat(#{searchName} ,'%')
			</when>
			<when test="startDate!=null and !startDate.equals('')">
				where Suju_date &gt; #{startDate}
			</when>
			<when test="endDate!=null and !endDate.equals('')">
				where Suju_date &lt; #{endDate}
			</when>
			<otherwise>
			</otherwise>
		</choose>
		
	</select>
	
	<select id="sujuList" parameterType="OrdersPaging" resultType="Orders">
		select *
		from orders o 
		left outer Join accounts a on o.account_no = a.account_no 
		<choose>
			<when test="searchName!=null and !searchName.equals('') and startDate!=null and !startDate.equals('') and endDate!=null and !endDate.equals('')">
				where a.account_name like concat(#{searchName} ,'%') 
				and  Suju_date between #{startDate} and #{endDate}
			</when>
			<when test="searchName!=null and !searchName.equals('') and startDate!=null and !startDate.equals('')">
				where a.account_name like concat(#{searchName} ,'%')
				and	  Suju_date &gt; #{startDate}
			</when>
			<when test="searchName!=null and !searchName.equals('') and endDate!=null and !endDate.equals('')">
				where a.account_name like concat(#{searchName} ,'%')
				and	  Suju_date &lt; #{endDate}
			</when>
			<when test="startDate!=null and !startDate.equals('') and endDate!=null and !endDate.equals('')">
				where Suju_date between #{startDate} and #{endDate}
			</when>
			<when test="searchName!=null and !searchName.equals('')">
				where a.account_name like concat(#{searchName} ,'%')
			</when>
			<when test="startDate!=null and !startDate.equals('')">
				where Suju_date &gt; #{startDate}
			</when>
			<when test="endDate!=null and !endDate.equals('')">
				where Suju_date &lt; #{endDate}
			</when>
			<otherwise>
			</otherwise>
		</choose>
		 limit #{rowPage}
		offset #{start};
	</select>
	
	<select id="sujuInfo" parameterType="int" resultType="Orders">
		select suju_no, o.emp_no, emp_name, o.account_no,account_name, suju_date, last_date, order_note
		from orders o left outer join emp e on o.emp_no = e.emp_no left outer join accounts a on o.account_no = a.account_no
		where Suju_No= #{suju_no}
	</select>
	
	<select id="sujuDetail" parameterType="int" resultType="OrdersDetail">
		select od.Suju_No, od.item_no, i.item_Name, od.Suju_Amount, po.Prod_State, od.balju_no
		from orders_detail od left outer join item i on od.item_no = i.item_no left outer join production_order po on po.suju_no = od.Suju_No and po.item_no = od.item_no
		where od.Suju_No= #{suju_no}
	</select>
	
	<delete id="sujuDelete" parameterType="int">
		delete 
		from orders
		where suju_no = #{suju_no}
		and not exists (select * from production_order where suju_no = #{suju_no} and prod_state != '지시 전')
	</delete>
	
	<delete id="sujuModifyDelete" parameterType="Orders">
		delete 
		from orders_detail
		where suju_no = #{suju_no}
		<foreach collection="ordersDetailDTOs" item="item" open="and item_no not in(" close=")" separator=", ">
			#{item.item_no}
		</foreach>
		and not exists (
			select * 
			from production_order 
			where suju_no = #{suju_no} 
			<foreach collection="ordersDetailDTOs" item="item" open="and item_no not in(" close=")" separator=", ">
				#{item.item_no}
			</foreach>
			and prod_state != '지시 전'
		)
	</delete>
	
	<update id="sujuModifyOrders" parameterType="Orders">
		update
		orders
		set
		account_no = #{account_no},
	    suju_date = #{suju_date},
	    last_date = #{last_date},
	    order_note = #{order_note}
	    where suju_no = #{suju_no}
	    and not exists (
	    select * 
	    from production_order 
	    where suju_no = #{suju_no}
	    <foreach collection="ordersDetailDTOs" item="item" open="and item_no in(" close=")" separator=", ">
				#{item.item_no}
		</foreach>
	    and prod_state != '지시 전')
	</update>
	
	<insert id="sujuModifyDetails" parameterType="Orders">
		insert into orders_detail (suju_no, item_no, suju_amount, balju_no)
		<foreach collection="ordersDetailDTOs" item="item" separator=" union all ">
			select #{suju_no}, #{item.item_no}, #{item.suju_amount}, #{item.balju_no}
			where not exists (
				select * from production_order 
				where suju_no = #{suju_no}
				and item_no = #{item.item_no}
				and Prod_state = '생산완료')
		</foreach>
		on duplicate key update
		suju_amount = VALUES(suju_amount);
	</insert>
	
	<insert id="sujuInsertPo" parameterType="Orders">
		insert into production_order (suju_no, item_no, emp_no, finish_date, prod_date,prod_amount, prod_state, factory_no)
		<foreach collection="ordersDetailDTOs" item="item" separator=" union all ">
			select #{suju_no}, #{item.item_no},#{emp_no}, null, #{suju_date}, #{item.suju_amount}, '지시 전', null
			where not exists (
				select * from production_order 
				where suju_no = #{suju_no}
				and item_no = #{item.item_no}
				and Prod_state = '생산완료')
		</foreach>
		on duplicate key update
		prod_amount = VALUES(prod_amount)
	</insert>
</mapper>